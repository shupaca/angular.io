block includes
  include _util-fns

:marked
  Angularアプリケーションは _コンポーネント_ で構成されています。
    _コンポーネント_ は、HTMLテンプレートと画面の一部を制御するコンポーネントクラスの組み合わせです。 単純な文字列を表示するコンポーネントの例を次に示します。

+makeExample('src/app/app.component.ts')(format='.')

block qs-src-online-and-local
  .l-sub-section
    :marked
      Try this **<live-example noDownload>QuickStart example on Plunker</live-example>** without installing anything.
      Try it locally with the [***QuickStart seed***](guide/setup.html "Setup for local development with the QuickStart seed")
      and prepare for development of a real Angular application.

:marked
  すべてのコンポーネントは `@Component` [decorator](glossary.html#decorator '"decorator" explained')で始まります。
  _metadata_オブジェクトを取る関数です。 メタデータオブジェクトは、HTMLテンプレートとコンポーネントクラスがどのように連携するかを記述します。

  `selector`プロパティは、` index.html`のカスタム `<my-app>`タグの中にコンポーネントを表示するようにAngularに指示します。
+makeExample('src/index.html','my-app','index.html (inside <body>)')(format='.')
:marked
  `template`プロパティは` <h1> `ヘッダの中にメッセージを定義します。
  メッセージは "Hello"で始まり、 `{{name}}`で終わります。
  Angular の[補間バインディング](guide/displaying-data.html)です。
  実行時に、Angularは `{{name}}`をコンポーネントの `name`プロパティの値で置き換えます。
  補間バインディングは、このドキュメントで紹介する多くの Angular 機能の1つです。

:marked
  この例では、コンポーネントクラスの `name`プロパティを` `Angular``から` `World``に変更し、何が起こるかを見ていきます。

.callout.is-helpful
  header A word about TypeScript
  p.
    この例は、JavaScriptのスーパーセットである<a href="http://www.typescriptlang.org/" target="_blank" title="TypeScript"> TypeScript </a>で書かれています。 Angularでは、タイプによって、ツールを使用して開発者の生産性を容易にサポートできるため、TypeScriptが使用されます。 AngularコードはJavaScriptで記述することもできます。 <a href="cookbook/ts-to-js.html">このガイド</a>では方法について説明しています。

.l-sub-section
  :marked
    ### Next step

    Start [**learning Angular**](guide/learning-angular.html "Learning Angular").

